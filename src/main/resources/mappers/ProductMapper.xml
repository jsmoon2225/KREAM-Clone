<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kream.kream.mappers.ProductMapper">

    <insert id="insertProduct"
            useGeneratedKeys="true"
            keyColumn="id"
            keyProperty="id"
            parameterType="com.kream.kream.entities.ProductEntity">
        INSERT INTO `kream`.`product` (`id`, `category_detail_id`, `base_name`, `product_name_ko`, `product_name_en`, `model_number`, `release_date`, `color`, `brand`, `category`, `gender`, `created_at`, `updated_at`, `is_deleted`)
        VALUES (#{id}, #{categoryDetailId}, #{baseName}, #{productNameKo}, #{productNameEn}, #{modelNumber}, #{releaseDate}, #{color}, #{brand}, #{category}, #{gender}, #{createdAt}, #{updatedAt}, #{isDeleted})
    </insert>

    <select id="selectProduct"
            resultType="com.kream.kream.entities.ProductEntity">
        SELECT `product`.`id`         AS `id`,
               `category_detail_id`   AS `categoryDetailId`,
               `product_name_ko`      AS `productNameKo`,
               `product_name_en`      AS `productNameEn`,
               `model_number`         AS `modelNumber`,
               `release_date`         AS `releaseDate`,
               `color`                AS `color`,
               `brand`                AS `brand`,
               `category`             AS `category`,
               `gender`               AS `gender`,
               `product`.`created_at` AS `createdAt`,
               `updated_at`           AS `updatedAt`,
               `is_deleted`           AS `isDeleted`
        FROM `kream`.`product`
        WHERE is_deleted = FALSE
        ORDER BY `id` DESC
    </select>

    <select id="selectProductById"
            resultType="com.kream.kream.entities.ProductEntity">
        SELECT `id`                 AS `id`,
               `category_detail_id` AS `categoryDetailId`,
               `product_name_ko`    AS `productNameKo`,
               `product_name_en`    AS `productNameEn`,
               `model_number`       AS `modelNumber`,
               `release_date`       AS `releaseDate`,
               `color`              AS `color`,
               `brand`              AS `brand`,
               `category`           AS `category`,
               `gender`             AS `gender`,
               `created_at`         AS `createdAt`,
               `updated_at`         AS `updatedAt`,
               `is_deleted`         AS `isDeleted`
        FROM `kream`.`product`
        WHERE `id` = #{id}
        LIMIT 1
    </select>

    <select id="selectProductBySearch">
        SELECT `id`                 AS `id`,
        `category_detail_id` AS `categoryDetailId`,
        `product_name_ko`    AS `productNameKo`,
        `product_name_en`    AS `productNameEn`,
        `model_number`       AS `modelNumber`,
        `release_date`       AS `releaseDate`,
        `color`              AS `color`,
        `brand`              AS `brand`,
        `category`           AS `category`,
        `gender`             AS `gender`,
        `created_at`         AS `createdAt`,
        `updated_at`         AS `updatedAt`,
        `is_deleted`         AS `isDeleted`
        FROM `kream`.`product`
        WHERE `is_deleted` = FALSE
        <if test="filter.equals('all')"> <!-- 참일떄만 붙여준다. -->
            AND (`model_number` LIKE CONCAT('%', #{keyword}, '%') OR `product_name_ko` LIKE CONCAT('%', #{keyword}, '%') OR `product_name_en` LIKE CONCAT('%', #{keyword}, '%') OR `brand` LIKE CONCAT('%', #{keyword}, '%') OR `category` LIKE CONCAT('%', #{keyword}, '%'))
        </if>
        <if test="filter.equals('modelNum')">
            AND `model_number` LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="filter.equals('name')">
            AND (`product_name_ko` LIKE CONCAT('%', #{keyword}, '%') OR `product_name_en` LIKE CONCAT('%', #{keyword}, '%'))
        </if>
        <if test="filter.equals('brand')">
            AND `brand` LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="filter.equals('category')">
            AND `category` LIKE CONCAT('%', #{keyword}, '%')
        </if>
        ORDER BY `id` DESC
    </select>

    <update id="updateProduct">
        UPDATE `kream`.`product`
        SET `category_detail_id` = #{product.categoryDetailId},
            `product_name_ko`    = #{product.productNameKo},
            `product_name_en`    = #{product.productNameEn},
            `model_number`       = #{product.modelNumber},
            `release_date`       = #{product.releaseDate},
            `color`              = #{product.color},
            `brand`              = #{product.brand},
            `category`           = #{product.category},
            `gender`             = #{product.gender},
            `created_at`         = #{product.createdAt},
            `updated_at`         = #{product.updatedAt},
            `is_deleted`         = #{product.isDeleted}
        WHERE `id` = #{product.id}
        LIMIT 1
    </update>

    <select id="selectProductImagesByBaseName">
        SELECT `product`.`id` AS productId,
               `image`.`data` AS imageData,
               `image`.`type` AS imageType
        FROM `kream`.`product`
                 LEFT JOIN `kream`.`image`
                           ON `product`.`id` = `image`.`product_id`
                               AND `image`.`is_primary` = 1
        WHERE `product`.`base_name` = #{baseName}
    </select>

    <select id="selectPopularProducts"
            resultType="com.kream.kream.dtos.ProductDTO">
        SELECT `product`.`id`              AS productId,
               `product`.`product_name_en` AS productName,
               `product`.`brand`           AS brand,
               `product`.`category`        AS category,
               `image`.`data`              AS imageData,
               `image`.`type`              AS imageType,
               MIN(`seller_bid`.`price`)   AS lowestPrice,
               COUNT(`order`.`id`)         AS transactionCount
        FROM `kream`.`order`
                 LEFT JOIN `kream`.`seller_bid`
                           ON `seller_bid_id` = `seller_bid`.`id`
                               AND `seller_bid`.`state` = 'BIDDING'
                 LEFT JOIN `kream`.`buyer_bid`
                           ON `buyer_bid_id` = `buyer_bid`.`id`
                 INNER JOIN `kream`.`size`
                            ON `seller_bid`.`size_id` = `size`.`id`
                                OR `buyer_bid`.`size_id` = `size`.`id`
                 INNER JOIN `kream`.`product`
                            ON `product_id` = `product`.`id`
                 INNER JOIN `kream`.`image`
                            ON `product`.`id` = `image`.`product_id`
                                AND `image`.`is_primary` = 1
        WHERE `order`.`state` = 'DELIVERED'
        GROUP BY `product`.`id`
        ORDER BY transactionCount DESC
        LIMIT 20
    </select>

    <select id="selectNewProducts"
            resultType="com.kream.kream.dtos.ProductDTO">
        SELECT `product`.`id`                               AS productId,
               `product`.`product_name_en`                  AS productName,
               `product`.`brand`                            AS brand,
               `product`.`category`                         AS category,
               `image`.`data`                               AS imageData,
               `image`.`type`                               AS imageType,
               (SELECT MIN(`seller_bid`.`price`)
                FROM `kream`.`seller_bid`
                         INNER JOIN `kream`.`size`
                                    ON `seller_bid`.`size_id` = `size`.`id`
                WHERE `size`.`product_id` = `product`.`id`
                  AND `seller_bid`.`state` = 'BIDDING')     AS lowestPrice,
               (SELECT COUNT(`order`.`id`)
                FROM `kream`.`order`
                         LEFT JOIN `kream`.`buyer_bid`
                                   ON `order`.`buyer_bid_id` = `buyer_bid`.`id`
                         LEFT JOIN `kream`.`seller_bid`
                                   ON `order`.`seller_bid_id` = `seller_bid`.`id`
                         INNER JOIN `kream`.`size`
                                    ON `buyer_bid`.`size_id` = `size`.`id`
                                        OR `seller_bid`.`size_id` = `size`.`id`
                WHERE `order`.`state` = 'DELIVERED'
                  AND `size`.`product_id` = `product`.`id`) AS transactionCount
        FROM `kream`.`product`
                 LEFT JOIN `kream`.`image`
                           ON `product`.`id` = `image`.`product_id`
                               AND `image`.`is_primary` = 1
        WHERE `product`.`is_deleted` = 0
        ORDER BY `product`.`created_at` DESC
        LIMIT 20
    </select>

    <select id="selectPopularProductsByFilter"
            resultType="com.kream.kream.dtos.ProductDTO">
        SELECT `product`.`id`              AS productId,
        `product`.`product_name_en` AS productName,
        `product`.`brand`           AS brand,
        `product`.`category`        AS category,
        `image`.`data`              AS imageData,
        `image`.`type`              AS imageType,
        MIN(`seller_bid`.`price`)   AS lowestPrice,
        COUNT(`order`.`id`)         AS transactionCount
        FROM `kream`.`order`
        LEFT JOIN `kream`.`seller_bid`
        ON `seller_bid_id` = `seller_bid`.`id`
        AND `seller_bid`.`state` = 'BIDDING'
        LEFT JOIN `kream`.`buyer_bid`
        ON `buyer_bid_id` = `buyer_bid`.`id`
        INNER JOIN `kream`.`size`
        ON `seller_bid`.`size_id` = `size`.`id`
        OR `buyer_bid`.`size_id` = `size`.`id`
        INNER JOIN `kream`.`product`
        ON `product_id` = `product`.`id`
        INNER JOIN `kream`.`image`
        ON `product`.`id` = `image`.`product_id`
        AND `image`.`is_primary` = 1
        WHERE `order`.`state` = 'DELIVERED'
        <if test="filter.equals('top')">
            AND `category` LIKE CONCAT('%', #{filter}, '%')
        </if>
        <if test="filter.equals('bottom')">
            AND `category` LIKE CONCAT('%', #{filter}, '%')
        </if>
        <if test="filter.equals('shoes')">
            AND `category` LIKE CONCAT('%', #{filter}, '%')
        </if>
        <if test="filter.equals('accessories')">
            AND `category` LIKE CONCAT('%', #{filter}, '%')
        </if>
        GROUP BY `product`.`id`
        ORDER BY transactionCount DESC
        LIMIT 20
    </select>
</mapper>